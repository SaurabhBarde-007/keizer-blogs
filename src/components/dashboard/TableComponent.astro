---
import { Button } from "@/components/ui/button";

const { data, columns, actions } = Astro.props as {
  data: Record<string, any>[];
  columns: { key: string; label: string; icon?: any; truncate?: number }[];
  actions?: { label: string; icon: any; onClick?: Function; styleClass?: string }[];
};

function truncate(str: string, length: number) {
  return str.length > length ? str.substring(0, length) + "..." : str;
}
---

<div class="overflow-x-auto bg-white rounded-lg shadow-sm border border-gray-200">
  <table class="w-full">
    <thead>
      <tr class="bg-gray-50 border-b border-gray-200">
        {columns.map((col) => (
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            <div class="flex items-center space-x-1">
              {col.icon && <col.icon className="h-4 w-4" />}
              <span>{col.label}</span>
            </div>
          </th>
        ))}
        {actions && <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>}
      </tr>
    </thead>
    <tbody class="bg-white divide-y divide-gray-200">
      {data.map((row) => (
        <tr class="hover:bg-gray-50 transition-colors duration-150">
          {columns.map((col) => (
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
              {col.truncate
                ? truncate(row[col.key]?.toString() || "", col.truncate)
                : row[col.key]}
            </td>
          ))}
          {actions && (
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
              <div class="flex space-x-2">
                {actions.map((action) => (
                  <Button
                    variant="outline"
                    size="sm"
                    className={`${action.styleClass || ""} transition-colors duration-150`}
                    onClick={() => action.onClick && action.onClick(row)}
                  >
                    {action.icon && <action.icon className="h-4 w-4 mr-2" />}
                    {action.label}
                  </Button>
                ))}
              </div>
            </td>
          )}
        </tr>
      ))}
    </tbody>
  </table>
</div>