---
import DashboardLayout from "@/layouts/dashboard.astro";
import { actions } from "astro:actions";
import { Plus, Search, User, Calendar, Pencil, Trash2 } from 'lucide-react';
import { Button } from "@/components/ui/button";
import TableComponent from "@/components/dashboard/TableComponent.astro";
import SearchBar from "@/components/dashboard/SearchBar.astro";
import PaginationComponent from "@/components/dashboard/PaginationComponent.astro";

const columns = [
  { key: "title", label: "Title", truncate: 50 },
  { key: "body", label: "Content", truncate: 50 },
  { key: "authorId", label: "Author", icon: User },
  { key: "createdAt", label: "Created At", icon: Calendar },
];

const tableActions = [
  { label: "Edit", icon: Pencil, styleClass: "text-blue-600 hover:text-blue-700 hover:bg-blue-50" },
  { label: "Delete", icon: Trash2, styleClass: "text-red-600 hover:text-red-700 hover:bg-red-50" },
];

const DEFAULT_PAGE_SIZE = 10;
const pageSize = Number(Astro.url.searchParams.get("pageSize") || DEFAULT_PAGE_SIZE);
const currentPage = Number(Astro.url.searchParams.get("page") || "1");
const searchQuery = Astro.url.searchParams.get("search") || "";

// Fetch Blogs
const { data, error } = await Astro.callAction(actions.blogs.fetchBlogs, {
  page: currentPage,
  pageSize,
  search: searchQuery,
});

if (error) {
  console.error("Error fetching blogs:", error);
}

let blogs = data?.blogs || [];
let totalBlogs = data?.total || 0;

const totalPages = Math.ceil(totalBlogs / pageSize);

const userRole = 'admin';
---

<DashboardLayout userRole={userRole}>
  {['admin', 'editor'].includes(userRole) ? (
    <div class="space-y-6">
      <div class="flex justify-between items-center">
        <h1 class="text-3xl font-bold text-gray-900">Blogs</h1>
        <Button>
          <Plus className="h-5 w-5 mr-2" />
          New Blog
        </Button>
      </div>

      <SearchBar
        placeholder="Search blogs by title"
        searchQuery={searchQuery}
        pageSize={pageSize}
      />

      <main>
        <section class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
          <h2 class="text-xl font-semibold mb-4 text-gray-800">All Blogs</h2>
          {blogs.length > 0 ? (
            <>
              <TableComponent data={blogs} columns={columns} actions={tableActions} />
              <div class="mt-6">
                <PaginationComponent
                  currentPage={currentPage}
                  totalPages={totalPages}
                  pageSize={pageSize}
                  searchQuery={searchQuery}
                  basePath="/dashboard/blogs"
                />
              </div>
            </>
          ) : (
            <p class="text-center text-gray-500 py-8">No blogs found</p>
          )}
        </section>
      </main>
    </div>
  ) : (
    <meta http-equiv="refresh" content="0;url=/dashboard/no-access" />
  )}
</DashboardLayout>