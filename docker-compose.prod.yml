version: "3.8"

services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - APP_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_URL=${DB_URL}
      - MINIO_URL=${MINIO_URL}
      - NEXT_PUBLIC_MINIO_URL=${NEXT_PUBLIC_MINIO_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - LANGDB_OPENAI_BASE_URL=${LANGDB_OPENAI_BASE_URL}
      - LANGDB_PROJECT_ID=${LANGDB_PROJECT_ID}
      - LANGDB_API_KEY=${LANGDB_API_KEY}
    restart: unless-stopped
    volumes:
      - ./app:/app
      - node_modules:/app/node_modules

  postgres:
    image: postgres:16-alpine
    profiles: ["with-postgres"]
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  node_modules:
    external: true
  postgres_data:
